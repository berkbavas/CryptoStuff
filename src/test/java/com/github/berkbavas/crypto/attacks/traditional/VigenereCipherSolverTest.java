package com.github.berkbavas.crypto.attacks.traditional;

import com.github.berkbavas.crypto.ciphers.traditional.VigenereCipher;
import com.github.berkbavas.crypto.util.Stopwatch;
import com.github.berkbavas.crypto.util.TextFitnessCalculator;
import org.junit.jupiter.api.Test;

import java.security.SecureRandom;

import static org.junit.jupiter.api.Assertions.assertTrue;

class VigenereCipherSolverTest {

    @Test
    void testFindKey() {
        System.out.println("VigenereCipherSolverTest.java: Test is started.");

        String plaintext = "THISISACOMBINATIONOFTWOCIPHERSIHONESTLYDONTKNOWASTRAIGHTFORWARDWAYTOSOLVEITBUTIMSUREYOUGUYSCANFIGURESOMETHINGOUTTOPROVEYOUSOLVEDTHISPROBLEMTYPEINTHEWORDTENTACLENOWIMGOINGTOCOPYANDPASTESOMETEXTSOTHEREISENOUGHSUBSTANCETODOEFFECTIVECHARACTERFREQUENCYANALYSISSOHEREISSOMETEXTFROMWARANDPEACEHEWOULDHAVEEMBRACEDHERBUTBLUSHINGSHESTEPPEDASIDEFEARINGTOBERUMPLEDMAMMAYOURCAPMORETOTHISSIDESAIDNATDSHAILLARRANGEITANDSHERUSHEDFORWARDSOTHATTHEMAIDSWHOWERETACKINGUPHERSKIRTCOULDNOTMOVEFASTENOUGHANDAPIECEOFGAUZEWASTORNOFFOHGOODNESSWHATHASHAPPENEDREALLYITWASNOTMYFAULTINEVERMINDILLRUNITUPITWONTSHOWSAIDDUNYDSHAWHATABEAUTYAVERYQUEENSAIDTHENURSEASSHECAMETOTHEDOORANDSNYATHEYARELOVELYIATAQUARTERPASTTENTHEYATLASTGOTINTOTHEIRCARRIAGESANDSTARTEDBUTTHEYHADSTILLTOCALLATTHETAURIDAGARDENSPERNSKAYAWASQUITEREADYINSPITEOFHERAGEANDPLAINNESSSHEHADGONETHROUGHTHESAMEPROCESSASTHEROSTVSBUTWITHLESSFLURRYFORTOHERITWASAMATTEROFROUTINEHERUGLYOLDBODYWASWASHEDPERFUMEDANDPOWDEREDINJUSTTHESAMEWAYSHEHADWASHEDBEHINDHEREARSJUSTASCAREFULLYANDWHENSHEENTEREDHERDRAWINGROOMINHERYELLOWDRESSWEARINGHERBADGEASMAIDOFHONORHEROLDLADYSMAIDWASASFULLOFRAPTUROUSADMIRATIONASTHEROSTVSSERVANTSHADBEENSHEPRAISEDTHEROSTVSTOILETSTHEYPRAISEDHERTASTEANDTOILETANDATELEVENOCLOCKCAREFULOFTHEIRCOIFFURESANDDRESSESTHEYSETTLEDTHEMSELVESINTHEIRCARRIAGESANDDROVEOFFCHAPTERXVNATASHAHADNOTHADAMOMENTFREESINCEEARLYMORNINGANDHADNOTONCEHADTIMETOTHINKOFWHATLAYBEFOREHERINTHEDAMPCHILLAIRANDCROWDEDCLOSENESSOFTHESWAYINGCARRIAGESHEFORTHEFIRSTTIMEVIVIDLYIMAGINEDWHATWASINSTOREFORHERTHEREATTHEBALLINTHOSEBRIGHTLYLIGHTEDROOMSWITHMUSICFLOWERSDANCESTHEEMPERORANDALLTHEBRILLIANTYOUNGPEOPLEOFPETERSBURGTHEPROSPECTWASSOSPLENDIDTHATSHEHARDLYBELIEVEDITWOULDCOMETRUESOOUTOFKEEPINGWASITWITHTHECHILLDARKNESSANDCLOSENESSOFTHECARRIAGESHEUNDERSTOODALLTHATAWAITEDHERONLYWHENAFTERSTEPPINGOVERTHEREDBAIZEATTHEENTRANCESHEENTEREDTHEHALLTOOKOFFHERFURCLOAKANDBESIDESNYAANDINFRONTOFHERMOTHERMOUNTEDTHEBRIGHTLYILLUMINATEDSTAIRSBETWEENTHEFLOWERSONLYTHENDIDSHEREMEMBERHOWSHEMUSTBEHAVEATABALLANDTRIEDTOASSUMETHEMAJESTICAIRSHECONSIDEREDINDISPENSABLEFORAGIRLONSUCHANOCCASIONBUTFORTUNATELYFORHERSHEFELTHEREYESGROWINGMISTYSHESAWNOTHINGCLEARLYHERPULSEBEATAHUNDREDTOTHEMINUTEANDTHEBLOODTHROBBEDATHERHEARTSHECOULDNOTASSUMETHATPOSEWHICHWOULDHAVEMADEHERRIDICULOUSANDSHEMOVEDONALMOSTFAINTINGFROMEXCITEMENTANDTRYINGWITHALLHERMIGHTTOCONCEALITANDTHISWASTHEVERYATTITUDETHATBECAMEHERBESTBEFOREANDBEHINDTHEMOTHERVISITORSWEREENTERINGALSOTALKINGINLOWTONESANDWEARINGBALLDRESSESTHEMIRRORSONTHELANDINGREFLECTEDLADIESINWHITEPALEBLUEANDPINKDRESSESWITHDIAMONDSANDPEARLSONTHEIRBARENECKSANDARMS";
        int success = 0;
        int numberOfAttacks = 20;
        int lowerBound = 3;
        int upperBound = 10;
        SecureRandom sr = new SecureRandom();

        for (int i = 0; i < numberOfAttacks; i++) {
            String key = VigenereCipher.generateKey(lowerBound + sr.nextInt(upperBound - lowerBound));
            String ciphertext = VigenereCipher.encrypt(plaintext, key);

            Stopwatch sw = new Stopwatch();
            String foundKey = VigenereCipherSolver.findKey(ciphertext, upperBound);
            sw.stop();

            String decrypted = VigenereCipher.decrypt(ciphertext, foundKey);
            double score = TextFitnessCalculator.calculate(decrypted);
            if (plaintext.compareTo(decrypted) == 0)
                success++;

            System.out.printf("VigenereCipherSolverTest.java: " +
                            "[%2d / %2d] \t [%d ms] \t Score: %f \t Found Key: %-10s \t Actual Key: %-10s \t Decrypted Text: %.100s%n",
                    success, i + 1, sw.elapsed(), score, foundKey, key, decrypted);
        }

        System.out.printf("VigenereCipherSolverTest.java: " +
                "%d successful attacks out of %d tries.%n", success, numberOfAttacks);

        assertTrue(success > numberOfAttacks * 0.5);
    }
}